@model MountainStyleShop.ModelNH.Model.AvaliacaoProduto

<hr />
<h3>Deixe sua Avaliação</h3>
<hr />
@using (Html.BeginForm("Gravar", "Avaliacao", FormMethod.Post)) 
{
    @Html.AntiForgeryToken()
    
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    @Html.HiddenFor(model=>model.Produto.Id)

    @Html.HiddenFor(model => model.NotaAvaliacao);

    @Html.Label("Nota: ", htmlAttributes: new { })
    <div class="btn-toolbar" role="toolbar">
        <button type="button" class="btn btn-success" onclick="avaliacao(2)"><i class="fa fa-thumbs-o-up fa-2x"></i></button> Gostei 
        <button type="button" class="btn btn-danger" onclick="avaliacao(1)"><i class="fa fa-thumbs-o-down fa-2x"></i></button> Não Gostei 
        <button type="button" class="btn btn-default" onclick="avaliacao(0)"><i class="fa fa-quote-right fa-2x"></i></button> Não Avaliar
    </div>
    
    <br />

    @Html.Label("Comentario", htmlAttributes: new { })
    @Html.TextAreaFor(model => model.Comentario, new { @class = "form-control", @rows = 3 })
    @Html.ValidationMessageFor(model => model.Comentario, "", new { @class = "text-danger" })
    
    <br />

    <input type="submit" value="Enviar" class="btn btn-success" />

        }

<script>
    var nota = 0;
    function avaliacao(i) {
        document.getElementById("NotaAvaliacao").value = i;
    }
</script>
   